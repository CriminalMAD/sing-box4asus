#!/bin/sh

JFFS_SB_DIR="/jffs/addons/sing-box"
ROOT_DIR="/opt/root"
SB_DIR="$ROOT_DIR/sing-box"
SCRIPT_PATH="$JFFS_SB_DIR/sing-box-script"
SB_DOWNLOAD_DIR="$SB_DIR/sing-box-download"
SB_CONFIG="$JFFS_SB_DIR/config.json"
SCRIPT_URL="https://raw.githubusercontent.com/Dr4tez/sing-box4asus/main/sing-box-script"
SB_URL="https://api.github.com/repos/SagerNet/sing-box/releases/latest"
SB_DOWNLOAD_URL=$(curl -s -H "Accept: application/vnd.github.v3+json" "$SB_URL" | grep -o '"browser_download_url":\s*"[^"]*linux-arm64.tar.gz"' | grep -o 'https://.*linux-arm64.tar.gz')
SB_ARCHIVE_PATH="$SB_DOWNLOAD_DIR/sing-box-linux-arm64.tar.gz"

create_dir() {
    mkdir -p "$1"
    chmod 775 "$1"
    echo "Directory $1 created."
}

dir_exists() {
    [ -d "$1" ]
}

create_script_conf() {
    cat << EOF > "$1"
# This file is created automatically and the values ​​are entered via the console when executing the sbs setup command.
# If you want to change the values ​​here using the editor, then before doing so, be sure to stop sing-box via the console with the sbs stop command

# Enter in quotes, in one line, separated by spaces, the IP addresses of the devices whose traffic should be directed to the sing-box tun interface.
DEVICE_IPS="192.168.50.31 192.168.50.32"

# Determined automatically.
TUN_INTERFACE="sbtun"

# If the specified routing table number 555 on your router is already taken, which is unlikely, assign another number that is not taken.
ROUTE_TABLE="555"
EOF
    chmod 664 "$1"
}

create_monitor_routes() {
    cat << EOF > "$1"
#!/bin/sh

source "/jffs/addons/sing-box/script-conf"

add_default_route() {
    existing_route=\$(ip route show table "\$ROUTE_TABLE" | grep "default dev \$TUN_INTERFACE")
    if [ -z "\$existing_route" ]; then
        ip route add default dev "\$TUN_INTERFACE" table "\$ROUTE_TABLE"
        echo "Route added: ip route add default dev \$TUN_INTERFACE table \$ROUTE_TABLE"
    fi
}

monitor_routes() {
    ip monitor route | while read -r line; do
        echo "Change detected: \$line"
        echo "\$line" | grep -q "dev \$TUN_INTERFACE table"
        if [ \$? -eq 0 ]; then
            add_default_route
        fi
    done
}

trap '' SIGHUP

monitor_routes
EOF
    chmod 775 "$1"
}

check_file_existence_and_download() {
    local file_path="$1"
    local file_url="$2"
    local file_name=$(basename "$file_path")

    if [ -f "$file_path" ]; then
        while true; do
            read -p "The file $file_name already exists. What do you want to do?
(1: Skip download, 2: Download and replace file): " choice
            case $choice in
                1) echo "Skipping download $file_name."; return 0 ;;
                2) echo "Download and replace the file $file_name"; curl -s -L -o "$file_path" "$file_url"; return 0 ;;
                *) echo "Invalid input. Try again." ;;
            esac
        done
    else
        echo "Download $file_name..."
        curl -s -L -o "$file_path" "$file_url"
    fi
}

create_or_use_existing() {
    local dir_path="$1"
    if dir_exists "$dir_path"; then
        while true; do
            read -p "The directory $dir_path already exists. What do you want to do?
(1: Quit, 2: Use existing directory): " choice
            case $choice in
                1) rm -rf /jffs/scripts/sb-script-install ; echo "The script has completed its work."; exit 0 ;;
                2) echo "Use an existing directory $dir_path"; break ;;
                *) echo "Invalid input. Please try again." ;;
            esac
        done
    else
        create_dir "$dir_path"
    fi
}

handle_existing_file() {
    local file_path="$1"
    local create_function="$2"
    if [ -f "$file_path" ]; then
        while true; do
            read -p "The file $file_path already exists. What do you want to do?
(1: Leave existing file, 2: Replace file): " choice
            case $choice in
                1) echo "Leave the existing file."; break ;;
                2) echo "Replace the file $file_path"; "$create_function" "$file_path"; break ;;
                *) echo "Invalid input. Please try again." ;;
            esac
        done
    else
        "$create_function" "$file_path"
    fi
}

create_or_use_existing "$JFFS_SB_DIR"

check_file_existence_and_download "$SCRIPT_PATH" "$SCRIPT_URL"
chmod 775 $SCRIPT_PATH

ln -sf "$SCRIPT_PATH" /opt/bin/sbs

handle_existing_file "$JFFS_SB_DIR/script-conf" create_script_conf

handle_existing_file "$JFFS_SB_DIR/monitor-routes" create_monitor_routes

check_file_existence_and_download "$SB_CONFIG" "https://raw.githubusercontent.com/Dr4tez/sing-box4asus/main/config.json"
chmod 664 "$SB_CONFIG"

if [ -n "$ROOT_DIR" ]; then
    create_or_use_existing "$SB_DIR"
else
    echo "Directory '/opt/root' not found. Operation cancelled."
    exit 1
fi

create_dir "$SB_DOWNLOAD_DIR"

if [ -z "$SB_DOWNLOAD_URL" ]; then
    echo "Unable to find download link for archive."
    exit 1
fi

echo "Download the archive..."
curl -s -L -o "$SB_ARCHIVE_PATH" "$SB_DOWNLOAD_URL"

echo "Unpack the archive..."
tar -xzvf "$SB_ARCHIVE_PATH" -C "$SB_DOWNLOAD_DIR"

sing_box_file=$(find "$SB_DOWNLOAD_DIR" -name "sing-box" -type f)

if [ -z "$sing_box_file" ]; then
    echo "Could not find file sing-box in unpacked archive."
    exit 1
fi

sing_box_path="$SB_DIR/sing-box"
if [ -f "$sing_box_path" ]; then
    while true; do
        read -p "The file sing-box already exists. What do you want to do? 
(1: Leave existing file, 2: Replace file): " choice
        case $choice in
            1) echo "Leave the existing file."; break ;;
            2) echo "Replace the file $sing_box_path"; cp "$sing_box_file" "$SB_DIR"; chmod 775 "$sing_box_path"; break ;;
            *) echo "Invalid input. Please try again." ;;
        esac
    done
else
    cp "$sing_box_file" "$SB_DIR"; echo "The sing-box file has been moved to the $SB_DIR directory."
fi

rm -rf "$SB_DOWNLOAD_DIR" /jffs/scripts/sb-script-install

echo "Directory $SB_DOWNLOAD_DIR has been removed."

echo "

*********************
Installation completed.
*********************
The next step is to edit config.json - the sing-box configuration file located at $SB_CONFIG.
You can do this using WinSCP or in the router console with the command:
sbs edit
Then, to configure the sing-box script, run:
sbs setup
You can see hints for all commands by running the command in the router console:
sbs"
