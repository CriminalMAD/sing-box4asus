#!/bin/sh

# Version 1.1
# Скрипт для запуска sing-box на роутерах Asus с прошивкой Мерлина и установленным на USB носителе Entware.

# Переменные
JFFS_SB_DIR="/jffs/addons/sing-box-script"
SB_CONFIG="$JFFS_SB_DIR/config.json"
SCRIPT_PATH="$JFFS_SB_DIR/sbs-test"
SCRIPT_URL="https://raw.githubusercontent.com/Dr4tez/sing-box4asus/main/sbs-test"
SB_CONFIG_URL="https://raw.githubusercontent.com/Dr4tez/sing-box4asus/main/config.json"
SBS_CONF="$JFFS_SB_DIR/sbs-conf"
SBS_MON="$JFFS_SB_DIR/sbs-monitor"
TEMP_UPDATE="$JFFS_SB_DIR/temp-update"
ROOT_DIR="/opt/root"
SB_DIR="$ROOT_DIR/sing-box"
SB_PATH="$SB_DIR/sing-box"
SB_URL="https://api.github.com/repos/SagerNet/sing-box/releases/latest"
SB_DOWNLOAD_DIR="$SB_DIR/sing-box-download"
SB_ARCHIVE64_PATH="$SB_DOWNLOAD_DIR/sing-box-linux-arm64.tar.gz"
SB_ARCHIVE_PATH="$SB_DOWNLOAD_DIR/sing-box-linux-armv7.tar.gz"
SB_DOWNLOAD64_URL=$(curl -s -H "Accept: application/vnd.github.v3+json" "$SB_URL" | grep -o '"browser_download_url":\s*"[^"]*linux-arm64.tar.gz"' | grep -o 'https://.*linux-arm64.tar.gz')
SB_DOWNLOAD_URL=$(curl -s -H "Accept: application/vnd.github.v3+json" "$SB_URL" | grep -o '"browser_download_url":\s*"[^"]*linux-armv7.tar.gz"' | grep -o 'https://.*linux-armv7.tar.gz')
SS_DIR="/jffs/scripts"
FW_SCRIPT="$SS_DIR/firewall-start"
SS_SCRIPT="$SS_DIR/services-start"
SS_LINES="sleep 30 # sbs
$SCRIPT_PATH start # sbs"
LN_PATH="/opt/bin/sbs"

# Функции
log_msg() {
    echo "$1"
    logger -t "sbs" "$1"
}

create_dir() {
    mkdir -p "$1"
    chmod 775 "$1"
    echo "Директория $1 создана."
}

dir_exists() {
    [ -d "$1" ]
}

create_sbs_conf() {
    cat << EOF > "$1"
# This file is created automatically and the values are entered via the command line when executing the 'sbs setup' command.
# If you want to change the values here using an editor bypassing the 'sbs setup' command, then before doing so, be sure to stop sing-box with the 'sbs stop' command in the command line.

# In the DEVICE_IPS field, enter the IP addresses of the devices, whose traffic you want to route through the corresponding TUN_INTERFACE. IP addresses must be inside quotation marks, on one line, separated by spaces.
# If the specified ROUTE_TABLE values (routing table numbers) on your router are already taken, which is unlikely, assign other numbers that are not taken.
# Values TUN_INTERFACE is determined automatically. It is here because it is needed for sbs-monitor to work.

DEVICE_IPS1=""
ROUTE_TABLE1="555"
TUN_INTERFACE1=""

DEVICE_IPS2=""
ROUTE_TABLE2="556"
TUN_INTERFACE2=""
EOF
    chmod 664 "$1"
}

create_sbs_monitor() {
    cat << EOF > "$1"
#!/bin/sh

# Version 1.1

log_msg() {
    echo "\$1"
    logger -t "sbs-monitor" "\$1"
}

source "$SBS_CONF"

add_route() {
    TUN_INTERFACE=\$1
    ROUTE_TABLE=\$2

    existing_route=\$(ip route show table "\$ROUTE_TABLE" | grep "default dev \$TUN_INTERFACE")
    if [ -z "\$existing_route" ]; then
        if ip route add default dev "\$TUN_INTERFACE" table "\$ROUTE_TABLE"; then
            ip route show table main | while read ROUTE; do ip route add \$ROUTE table \$ROUTE_TABLE 2>/dev/null; done
            log_msg "Маршруты для таблицы \$ROUTE_TABLE добавлены."
        else
            log_msg "Ошибка при добавлении маршрутов для таблицы \$ROUTE_TABLE"
        fi
    fi
}

add_rule() {
    ROUTE_TABLE=\$1
    DEVICE_IPS=\$2

    existing_rule=\$(ip rule show | grep "lookup \$ROUTE_TABLE")
    if [ -z "\$existing_rule" ]; then
        for IP in \$DEVICE_IPS; do
            if ip rule add from "\$IP" lookup "\$ROUTE_TABLE"; then
                log_msg "Правило маршрутизации для \$IP через таблицу \$ROUTE_TABLE добавлено."
            else
                log_msg "Ошибка при добавлении правила маршрутизации для \$IP через таблицу \$ROUTE_TABLE"
            fi
        done
    fi
}

sbs_monitor_rr() {
    ip monitor | while read -r line; do

        if echo "\$line" | grep -q "dev \$TUN_INTERFACE1 table"; then
            log_msg "Обнаружено изменение: \$line"
            if [ -n "\$TUN_INTERFACE1" ] && [ -n "\$ROUTE_TABLE1" ] && [ -n "\$DEVICE_IPS1" ]; then
                add_route "\$TUN_INTERFACE1" "\$ROUTE_TABLE1"
            fi
        fi

        if echo "\$line" | grep -q "lookup \$ROUTE_TABLE1"; then
            log_msg "Обнаружено изменение: \$line"
            if [ -n "\$TUN_INTERFACE1" ] && [ -n "\$ROUTE_TABLE1" ] && [ -n "\$DEVICE_IPS1" ]; then
                add_rule "\$ROUTE_TABLE1" "\$DEVICE_IPS1"
            fi
        fi

        if echo "\$line" | grep -q "dev \$TUN_INTERFACE2 table"; then
            log_msg "Обнаружено изменение: \$line"
            if [ -n "\$TUN_INTERFACE2" ] && [ -n "\$ROUTE_TABLE2" ] && [ -n "\$DEVICE_IPS2" ]; then
                add_route "\$TUN_INTERFACE2" "\$ROUTE_TABLE2"
            fi
        fi

        if echo "\$line" | grep -q "lookup \$ROUTE_TABLE2"; then
            log_msg "Обнаружено изменение: \$line"
            if [ -n "\$TUN_INTERFACE2" ] && [ -n "\$ROUTE_TABLE2" ] && [ -n "\$DEVICE_IPS2" ]; then
                add_rule "\$ROUTE_TABLE2" "\$DEVICE_IPS2"
            fi
        fi
    done
}

trap '' SIGHUP

sbs_monitor_rr
EOF
    chmod 775 "$1"
}

check_file_existence_and_download() {
    local file_path="$1"
    local file_url="$2"
    local file_name=$(basename "$file_path")

    if [ -f "$file_path" ]; then
    echo "Файл $file_name уже существует. Что вы хотите сделать?"
        while true; do
            read -p "1-Пропустить скачивание, 2-Скачать и заменить файл: " choice
            case $choice in
                1) echo "Cкачивание $file_name пропущено."; return 0 ;;
                2) echo "Скачиваем и заменяем файл $file_name"; curl -s -L -o "$file_path" "$file_url"; return 0 ;;
                *) echo "Некорректный ввод. Попробуйте еще раз." ;;
            esac
        done
    else
        echo "Скачиваем $file_name..."
        curl -s -L -o "$file_path" "$file_url"
    fi
}

delete_if_not_current_dir() {
  local current_dir=$(dirname "$(readlink -f "$0")")
  if [ "$current_dir" != "$JFFS_SB_DIR" ]; then
    rm -f "$(readlink -f "$0")"
  fi
}

create_or_use_existing() {
    local dir_path="$1"
    if dir_exists "$dir_path"; then
    echo "Директория $dir_path уже существует. Что вы хотите сделать?"
        while true; do
            read -p "1-Завершить работу, 2-Использовать существующую директорию: " choice
            case $choice in
                1) delete_if_not_current_dir; echo "Работа скрипта завершена."; exit 0 ;;
                2) echo "Используем существующую директорию $dir_path"; break ;;
                *) echo "Некорректный ввод. Попробуйте еще раз." ;;
            esac
        done
    else
        create_dir "$dir_path"
    fi
}

handle_existing_file() {
    local file_path="$1"
    local create_function="$2"
    if [ -f "$file_path" ]; then
    echo "Файл $file_path уже существует. Что вы хотите сделать?"
        while true; do
            read -p "1-Оставить существующий файл, 2-Заменить файл: " choice
            case $choice in
                1) echo "Оставляем существующий файл."; break ;;
                2) echo "Заменяем файл $file_path"; "$create_function" "$file_path"; break ;;
                *) echo "Некорректный ввод. Попробуйте еще раз." ;;
            esac
        done
    else
        "$create_function" "$file_path"
    fi
}

ensure_script() {
    [ -f "$1" ] || { echo "#!/bin/sh" > "$1"; chmod 755 "$1"; }
}

update_script() {
    ensure_script "$1"
    echo "$2" | while read -r line; do
        grep -qF "$line" "$1" || echo "$line" >> "$1"
    done
}

remove_script_content() {
    [ -f "$1" ] && echo "$2" | while read -r line; do
        sed -i "/$(echo "$line" | sed 's/[\/&]/\\&/g')/d" "$1"
    done
}

manage_iptables() {
    if [ "$1" = "add" ]; then
        iptables -C $2 2>/dev/null || iptables -I $2 || log_msg "Ошибка добавления правила iptables: $2"
    elif [ "$1" = "remove" ]; then
        iptables -C $2 2>/dev/null && iptables -D $2 || log_msg "Ошибка удаления правила iptables: $2"
    fi
}

is_running() {
    ps | grep -v grep | grep -q "$SB_PATH"
}

get_sbs_version() {
    sed -n '3s/^# Version //p' "$1"
}

get_sb_versplat() {
    local vers plat
    vers=$("$1" version | awk '/^sing-box version/ {print $3}' | head -n 1)
    plat=$("$1" version | awk '/^Environment:/ {print $3}' | head -n 1)
    echo "$vers $plat"
}

get_sb_version() {
    local version
    version=$("$1" version | awk '/^sing-box version/ {print $3}' | head -n 1)
    echo "$version"
}

self_copy() {
    local destination="$1"
    cp "$0" "$destination"
}

silent_create_dir() {
    mkdir -p "$1"
    chmod 775 "$1"
}

sing_box_start() {
    echo "Запустить sing-box?"
    while true; do
        read -p "1-Нет, 2-Да: " choice
        case "$choice" in
            1) echo "sing-box не запущен."; break ;;
            2) start_sing_box; break ;;
            *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
        esac
    done
}

# Функция обновления tun интерфейсов
update_sbs_interfaces() {
    # Извлечение interface_names из config.json
    INTERFACES=$(awk -F'"' '/"interface_name":/ {print $4}' "$SB_CONFIG")
    # Чтение TUN_INTERFACE и DEVICE_IPS из sbs-conf
    TUN_INTERFACE1=$(grep 'TUN_INTERFACE1=' "$SBS_CONF" | cut -d '"' -f 2)
    TUN_INTERFACE2=$(grep 'TUN_INTERFACE2=' "$SBS_CONF" | cut -d '"' -f 2)
    DEVICE_IPS1=$(grep 'DEVICE_IPS1=' "$SBS_CONF" | cut -d '"' -f 2)
    DEVICE_IPS2=$(grep 'DEVICE_IPS2=' "$SBS_CONF" | cut -d '"' -f 2)
    # Инициализация переменных
    FOUND1=false
    FOUND2=false
    NEW_INTERFACE1=""
    NEW_INTERFACE2=""
    # Проверка на совпадения и обновление флагов
    for INTERFACE in $INTERFACES; do
        if [ "$INTERFACE" = "$TUN_INTERFACE1" ]; then
            FOUND1=true
        elif [ "$INTERFACE" = "$TUN_INTERFACE2" ]; then
            FOUND2=true
        else
            if [ -z "$NEW_INTERFACE1" ]; then
                NEW_INTERFACE1="$INTERFACE"
            elif [ -z "$NEW_INTERFACE2" ]; then
                NEW_INTERFACE2="$INTERFACE"
            fi
        fi
    done
    # Функция для обновления sbs-conf
    update_sbs_conf() {
        sed -i "s|TUN_INTERFACE1=\"[^\"]*\"|TUN_INTERFACE1=\"$1\"|" "$SBS_CONF"
        sed -i "s|DEVICE_IPS1=\"[^\"]*\"|DEVICE_IPS1=\"$2\"|" "$SBS_CONF"
        sed -i "s|TUN_INTERFACE2=\"[^\"]*\"|TUN_INTERFACE2=\"$3\"|" "$SBS_CONF"
        sed -i "s|DEVICE_IPS2=\"[^\"]*\"|DEVICE_IPS2=\"$4\"|" "$SBS_CONF"
    }
    # Логика для обновления конфигурации
    if $FOUND1 && $FOUND2; then
        # Оба интерфейса найдены, ничего не делаем
        return 0
    elif ! $FOUND1 && ! $FOUND2; then
        # Интерфейсы не найдены, сброс и назначение новых значений
        update_sbs_conf "$NEW_INTERFACE1" "" "$NEW_INTERFACE2" ""
    elif $FOUND1 && ! $FOUND2; then
        # TUN_INTERFACE1 найден, обновляем TUN_INTERFACE2 при необходимости
        update_sbs_conf "$TUN_INTERFACE1" "$DEVICE_IPS1" "$NEW_INTERFACE1" ""
    elif ! $FOUND1 && $FOUND2; then
        # TUN_INTERFACE2 найден, обновляем TUN_INTERFACE1 при необходимости
        update_sbs_conf "$NEW_INTERFACE1" "" "$TUN_INTERFACE2" "$DEVICE_IPS2"
    fi
}

start_sing_box() {
    log_msg "Запуск sing-box..."

    is_running && { log_msg "Ошибка: sing-box уже запущен."; exit 1; }

    source "$SBS_CONF"
    update_sbs_interfaces
    source "$SBS_CONF"

    FW_RULES1="FORWARD -i $TUN_INTERFACE1 -j ACCEPT
    FORWARD -o $TUN_INTERFACE1 -j ACCEPT
    INPUT -i $TUN_INTERFACE1 -j ACCEPT
    OUTPUT -o $TUN_INTERFACE1 -j ACCEPT"

    FW_RULES2="FORWARD -i $TUN_INTERFACE2 -j ACCEPT
    FORWARD -o $TUN_INTERFACE2 -j ACCEPT
    INPUT -i $TUN_INTERFACE2 -j ACCEPT
    OUTPUT -o $TUN_INTERFACE2 -j ACCEPT"

    lsmod | grep -q "^tun " || { log_msg "Загрузка модуля TUN"; modprobe tun; }

    $SB_PATH run -c $SB_CONFIG &
    sleep 3

# Проверка наличия tun интерфейсов
    interface1_exists=false
    interface2_exists=false
    # Проверка наличия первого интерфейса
    if ip link show "$TUN_INTERFACE1" >/dev/null 2>&1; then
        log_msg "TUN интерфейс $TUN_INTERFACE1 обнаружен."
        interface1_exists=true
    else
        interface1_exists=false
    fi
    # Проверка наличия второго интерфейса
    if ip link show "$TUN_INTERFACE2" >/dev/null 2>&1; then
        log_msg "TUN интерфейс $TUN_INTERFACE2 обнаружен."
        interface2_exists=true
    else
        interface2_exists=false
    fi
    # Проверка на отсутствие обоих интерфейсов
    if [ "$interface1_exists" = false ] && [ "$interface2_exists" = false ]; then
        log_msg "TUN интерфейсы не обнаружены."
    fi
# Конец проверки наличия tun интерфейсов

# Добавление правил файрвола и обновления скрипта firewall-start
    # Проверка и добавление правил для первого набора переменных
    if [ -n "$TUN_INTERFACE1" ] && [ -n "$ROUTE_TABLE1" ] && [ -n "$DEVICE_IPS1" ]; then
        log_msg "Добавление правил файрвола и обновление скрипта firewall-start для интерфейса $TUN_INTERFACE1"
        echo "$FW_RULES1" | while read -r rule; do
            manage_iptables "add" "$rule"
            update_script "$FW_SCRIPT" "iptables -I $rule"
        done
    fi
    # Проверка и добавление правил для второго набора переменных
    if [ -n "$TUN_INTERFACE2" ] && [ -n "$ROUTE_TABLE2" ] && [ -n "$DEVICE_IPS2" ]; then
        log_msg "Добавление правил файрвола и обновление скрипта firewall-start для интерфейса $TUN_INTERFACE2"
        echo "$FW_RULES2" | while read -r rule; do
            manage_iptables "add" "$rule"
            update_script "$FW_SCRIPT" "iptables -I $rule"
        done
    fi
# Конец добавления правил файрвола и обновлений скрипта firewall-start

    log_msg "Обновление скрипта services-start"
    update_script "$SS_SCRIPT" "$SS_LINES"

# Добавление правил маршрутизации
    # Проверка и добавление маршрутов для первого набора переменных
    if [ -n "$TUN_INTERFACE1" ] && [ -n "$ROUTE_TABLE1" ] && [ -n "$DEVICE_IPS1" ]; then
        log_msg "Добавление правил маршрутизации для интерфейса $TUN_INTERFACE1"
        ip route add default dev $TUN_INTERFACE1 table $ROUTE_TABLE1
        ip route show table main | while read ROUTE; do ip route add $ROUTE table $ROUTE_TABLE1 2>/dev/null; done
        for IP in $DEVICE_IPS1; do
            ip rule add from $IP lookup $ROUTE_TABLE1
        done
    fi
    # Проверка и добавление правил для второго набора переменных
    if [ -n "$TUN_INTERFACE2" ] && [ -n "$ROUTE_TABLE2" ] && [ -n "$DEVICE_IPS2" ]; then
        log_msg "Добавление правил маршрутизации для интерфейса $TUN_INTERFACE2"
        ip route add default dev $TUN_INTERFACE2 table $ROUTE_TABLE2
        ip route show table main | while read ROUTE; do ip route add $ROUTE table $ROUTE_TABLE2 2>/dev/null; done
        for IP in $DEVICE_IPS2; do
            ip rule add from $IP lookup $ROUTE_TABLE2
        done
    fi
# Конец добавления правил маршрутизации

    log_msg "sing-box запущен."

    $SBS_MON &
    log_msg "sbs-monitor запущен."
}

stop_sing_box() {
    log_msg "Остановка sing-box..."

    source "$SBS_CONF"

    FW_RULES1="FORWARD -i $TUN_INTERFACE1 -j ACCEPT
    FORWARD -o $TUN_INTERFACE1 -j ACCEPT
    INPUT -i $TUN_INTERFACE1 -j ACCEPT
    OUTPUT -o $TUN_INTERFACE1 -j ACCEPT"

    FW_RULES2="FORWARD -i $TUN_INTERFACE2 -j ACCEPT
    FORWARD -o $TUN_INTERFACE2 -j ACCEPT
    INPUT -i $TUN_INTERFACE2 -j ACCEPT
    OUTPUT -o $TUN_INTERFACE2 -j ACCEPT"

    pids=$(pidof "sbs-monitor")
    if [ -z "$pids" ]; then
      break
    fi
    for pid in $pids; do
      kill "$pid"
    done
    log_msg "sbs-monitor остановлен."

# Удаление правил маршрутизации
    # Проверка и удаление правил для первого набора переменных
    if [ -n "$TUN_INTERFACE1" ] && [ -n "$ROUTE_TABLE1" ] && [ -n "$DEVICE_IPS1" ]; then
        log_msg "Удаление правил маршрутизации для интерфейса $TUN_INTERFACE1"
        for IP in $DEVICE_IPS1; do
            ip rule del from $IP lookup $ROUTE_TABLE1
        done
        ip route flush table $ROUTE_TABLE1
    fi
    # Проверка и удаление правил для второго набора переменных
    if [ -n "$TUN_INTERFACE2" ] && [ -n "$ROUTE_TABLE2" ] && [ -n "$DEVICE_IPS2" ]; then
        log_msg "Удаление правил маршрутизации для интерфейса $TUN_INTERFACE2"
        for IP in $DEVICE_IPS2; do
            ip rule del from $IP lookup $ROUTE_TABLE2
        done
        ip route flush table $ROUTE_TABLE2
    fi
# Конец удаления правил маршрутизации

# Удаление правил файрвола и обновления скрипта firewall-start
    # Проверка и удаление правил для первого набора переменных
    if [ -n "$TUN_INTERFACE1" ] && [ -n "$ROUTE_TABLE1" ] && [ -n "$DEVICE_IPS1" ]; then
        log_msg "Удаление правил файрвола и обновление скрипта firewall-start для интерфейса $TUN_INTERFACE1"
        echo "$FW_RULES1" | while read -r rule; do
            manage_iptables "remove" "$rule"
            remove_script_content "$FW_SCRIPT" "iptables -I $rule"
        done
    fi
    # Проверка и удаление правил для второго набора переменных
    if [ -n "$TUN_INTERFACE2" ] && [ -n "$ROUTE_TABLE2" ] && [ -n "$DEVICE_IPS2" ]; then
        log_msg "Удаление правил файрвола и обновление скрипта firewall-start для интерфейса $TUN_INTERFACE2"
        echo "$FW_RULES2" | while read -r rule; do
            manage_iptables "remove" "$rule"
            remove_script_content "$FW_SCRIPT" "iptables -I $rule"
        done
    fi
# Конец удаления правил файрвола и обновлений скрипта firewall-start

    log_msg "Обновление скрипта services-start"
    remove_script_content "$SS_SCRIPT" "$SS_LINES"

    PIDS=$(pidof "sing-box")
    if [ -z "$PIDS" ]; then
      break
    fi
    for pid in $PIDS; do
      kill "$pid"
    done

    log_msg "sing-box остановлен."
}

setup_sing_box() {
    echo "Изменить настройки скрипта? Если sing-box запущен, при выборе варианта 2 он будет остановлен."
    while true; do
        read -p "1-Нет, 2-Да: " choice
        case "$choice" in
            1) echo "Выход из меню настроек."; exit 0 ;;
            2) if is_running; then stop_sing_box; fi; break ;;
            *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
        esac
    done

    echo "Переход к настройкам скрипта."

    echo "Редактировать config.json (конфигурационный файл sing-box) с помощью редактора nano?"
    while true; do
        read -p "1-Нет, 2-Да: " choice
        case "$choice" in
            1) echo "Отказ от редактирования config.json."; break ;;
            2) echo "Открытие config.json в редакторе nano."; nano $SB_CONFIG; echo "config.json сохранён."; break ;;
            *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
        esac
    done

    source "$SBS_CONF"
    update_sbs_interfaces
    source "$SBS_CONF"

    if [ -n "$TUN_INTERFACE1" ]; then
        echo "Текущие IP адреса устройств для $TUN_INTERFACE1: $DEVICE_IPS1. Изменить их? При выборе 2 существующие IP адреса будут заменены на введённые."
        while true; do
            read -p "1-Нет, 2-Да: " choice
            case "$choice" in
                1) echo "Отказ от замены IP адресов."; break ;;
                2) read -p "Введите новые IP адреса устройств: " new_ips1
                   DEVICE_IPS1="$new_ips1"
                   sed -i "s|^DEVICE_IPS1=\".*\"$|DEVICE_IPS1=\"$new_ips1\"|" "$SBS_CONF"
                   log_msg "IP адреса устройств для $TUN_INTERFACE1 изменены."; break ;;
                *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
            esac
        done
    fi

    if [ -n "$TUN_INTERFACE2" ]; then
        echo "Текущие IP адреса устройств для $TUN_INTERFACE2: $DEVICE_IPS2. Изменить их? При выборе 2 существующие IP адреса будут заменены на введённые."
        while true; do
            read -p "1-Нет, 2-Да: " choice
            case "$choice" in
                1) echo "Отказ от замены IP адресов."; break ;;
                2) read -p "Введите новые IP адреса устройств: " new_ips2
                   DEVICE_IPS2="$new_ips2"
                   sed -i "s|^DEVICE_IPS2=\".*\"$|DEVICE_IPS2=\"$new_ips2\"|" "$SBS_CONF"
                   log_msg "IP адреса устройств для $TUN_INTERFACE2 изменены."; break ;;
                *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
            esac
        done
    fi

    if [ -n "$TUN_INTERFACE1" ]; then
        echo "Текущий номер таблицы маршрутизации для $TUN_INTERFACE1: $ROUTE_TABLE1. Изменить его?"
        while true; do
            read -p "1-Нет, 2-Да: " choice
            case "$choice" in
                1) echo "Отказ от изменения номера таблицы маршрутизации."; break ;;
                2) read -p "Введите новый номер таблицы маршрутизации: " new_table1
                   ROUTE_TABLE1="$new_table1"
                   sed -i "s|^ROUTE_TABLE1=\".*\"$|ROUTE_TABLE1=\"$new_table1\"|" "$SBS_CONF"
                   log_msg "Номер таблицы маршрутизации для $TUN_INTERFACE1 изменен на $ROUTE_TABLE1."; break ;;
                *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
            esac
        done
    fi

    if [ -n "$TUN_INTERFACE2" ]; then
        echo "Текущий номер таблицы маршрутизации для $TUN_INTERFACE2: $ROUTE_TABLE2. Изменить его?"
        while true; do
            read -p "1-Нет, 2-Да: " choice
            case "$choice" in
                1) echo "Отказ от изменения номера таблицы маршрутизации."; break ;;
                2) read -p "Введите новый номер таблицы маршрутизации: " new_table2
                   ROUTE_TABLE2="$new_table2"
                   sed -i "s|^ROUTE_TABLE2=\".*\"$|ROUTE_TABLE2=\"$new_table2\"|" "$SBS_CONF"
                   log_msg "Номер таблицы маршрутизации для $TUN_INTERFACE2 изменен на $ROUTE_TABLE2."; break ;;
                *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
            esac
        done
    fi

    echo "Настройки сохранены."

    sing_box_start
}

edit_sing_box() {
    echo "Редактировать sbs-conf (файл настроек скрипта) с помощью редактора nano? Если sing-box запущен, при выборе варианта 2, он будет остановлен."
    while true; do
        read -p "1-Нет, 2-Да: " choice
        case "$choice" in
            1) echo "Выход."; exit 0 ;;
            2) if is_running; then stop_sing_box; fi; echo "Открытие sbs-conf в редакторе nano"; nano $SBS_CONF; echo "sbs-conf сохранён."; break ;;
            *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
        esac
    done

    sing_box_start
}

update_menu() {
    echo "Проверка версий скрипта sbs и ядра sing-box..."
    if [ ! -e "$SCRIPT_PATH"-tmp ]; then
      curl -s -L -o "$SCRIPT_PATH"-tmp "$SCRIPT_URL"
    fi

    if [ ! -d "$SB_DOWNLOAD_DIR" ]; then
        silent_create_dir "$SB_DOWNLOAD_DIR"
        if [ "$(uname -m)" = "aarch64" ]; then
            DOWNLOAD_URL="$SB_DOWNLOAD64_URL"
            ARCHIVE_PATH="$SB_ARCHIVE64_PATH"
        else
            DOWNLOAD_URL="$SB_DOWNLOAD_URL"
            ARCHIVE_PATH="$SB_ARCHIVE_PATH"
        fi
        curl -s -L -o "$ARCHIVE_PATH" "$DOWNLOAD_URL"
        tar -xzvf "$ARCHIVE_PATH" -C "$SB_DOWNLOAD_DIR" > /dev/null
    fi

    singbox_file=$(find "$SB_DOWNLOAD_DIR" -name "sing-box" -exec test -f {} \; -print)
    chmod 775 $singbox_file

    sbs_vers=$(get_sbs_version $SCRIPT_PATH)
    sb_vers=$(get_sb_version $SB_PATH)
    sbs_vers_new=$(get_sbs_version "$SCRIPT_PATH"-tmp)
    sb_vers_new=$(get_sb_version $singbox_file)

    echo "
Выберите действие. Если sing-box запущен, при выборе пунктов 1 или 2, он будет остановлен."
    while true; do
        read -p "1-Обновить скрипт sbs. Установленная версия "$sbs_vers", доступная версия $sbs_vers_new
2-Обновить ядро sing-box. Установленная версия "$sb_vers", доступная версия $sb_vers_new
0-Выйти из меню обновления.
:"      choice
        case "$choice" in
            1) if is_running; then stop_sing_box; fi; update_sbs; break ;;
            2) if is_running; then stop_sing_box; fi; updcore_sing_box; break ;;
            0) rm -f "$SCRIPT_PATH"-tmp; rm -rf "$SB_DOWNLOAD_DIR"; echo "Выход из меню обновления."; is_running || sing_box_start; exit 0 ;;
            *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
        esac
    done
}

update_sbs() {
    echo "
Обновление скрипта sbs..."
    cp "$SCRIPT_PATH"-tmp $SCRIPT_PATH
    chmod 775 $SCRIPT_PATH
    echo "Основной скрипт успешно обновлён."

    cat << EOF > $TEMP_UPDATE
#!/bin/sh
rm -f $TEMP_UPDATE
exec $SCRIPT_PATH updmon
EOF
    chmod 775 $TEMP_UPDATE

    exec $TEMP_UPDATE
}

update_sbs_monitor() {
    create_sbs_monitor "$SBS_MON"
    echo "Скрипт sbs-monitor успешно обновлён. Возврат в меню обновления."
    update_menu
}

updcore_sing_box() {
    echo "
Обновление ядра sing-box..."
    cp "$singbox_file" "$SB_DIR"; echo "Ядро sing-box успешно обновлено. Возврат в меню обновления."
    update_menu
}

check_sing_box() {
    # Выполнение команды и проверка на наличие ошибки
    echo "Проверка конфигурационного файла sing-box на ошибки..."
    if ! output=$($SB_PATH check -c $SB_CONFIG 2>&1); then
        echo "В конфигурационном файле обнаружена ошибка:"
        echo "$output"
        echo "Отредактировать конфигурационный файл в редакторе nano? 
Если sing-box запущен, при выборе варианта 2 он будет остановлен."
        while true; do
            echo "1-Нет, 2-Да"
            read choice
            case "$choice" in
                1) echo "Завершаем проверку, не исправив ошибки."; exit 0 ;;
                2) if is_running; then 
                        stop_sing_box
                    fi 
                    echo "Открываем конфигурационный файл в редакторе nano..."
                    nano $SB_CONFIG
                    echo "Редактирование конфигурационного файла завершено."
                    check_sing_box
                    return 0
                    ;;
                *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
            esac
        done
    else
        echo "Ошибки в конфигурационном файле не найдены."
        if [ "$choice" = "2" ]; then
            echo "Запустить sing-box? 1-Нет, 2-Да"
            while true; do
                read start_choice
                case "$start_choice" in
                    1) echo "Вы выбрали не запускать sing-box."; break ;;
                    2) start_sing_box; break ;;
                    *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
                esac
            done
        fi
    fi
}

format_sing_box() {
    echo "Выполнить format конфигурационного файла sing-box? Если sing-box запущен, при выборе варианта 2 он будет остановлен."
    while true; do
        read -p "1-Нет, 2-Да: " choice
        case "$choice" in
            1) echo "format конфигурационного файла sing-box отменён."; exit 0 ;;
            2) 
                if is_running; then 
                    stop_sing_box
                fi
                break 
                ;;
            *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
        esac
    done

    while true; do
        if ! output=$($SB_PATH format -c $SB_CONFIG 2>&1); then
            # В случае ошибки выводим сообщение об ошибке
            echo "В конфигурационном файле обнаружена ошибка:"
            echo "$output"
            echo "Отредактировать конфигурационный файл в редакторе nano?"
            while true; do
                read -p "1-Нет, 2-Да: " edit_choice
                case "$edit_choice" in
                    1) echo "Завершаем проверку, не исправив ошибки."; exit 0 ;;
                    2) echo "Открываем конфигурационный файл в редакторе nano..."
                        nano $SB_CONFIG
                        echo "Редактирование конфигурационного файла завершено."
                        break
                        ;;
                    *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
                esac
            done
        else
            # Если ошибки нет, показываем результат и выходим из цикла
            echo "Ошибки больше не обнаружены."
            echo "Результат выполнения format:"
            echo "$output"

            while true; do
                read -p "Сохранить данный результат работы format в ваш конфигурационный файл sing-box?
1-Нет, 2-Да: " save_choice
                case "$save_choice" in
                    1) echo "Вы выбрали не сохранять результат работы format."
                        break
                        ;;
                    2) $SB_PATH format -w -c $SB_CONFIG
                        echo "Изменения сохранены в конфигурационный файл."
                        break
                        ;;
                    *) echo "Некорректный ввод. Попробуйте ещё раз." 
                        ;;
                esac
            done
            # Завершение цикла
            break
        fi
    done

    sing_box_start
}

status_sing_box() {
    if is_running; then
        echo "sing-box запущен."
    else
        echo "sing-box остановлен."
    fi

    sbs_version=$(get_sbs_version $SCRIPT_PATH)
    if [ -n "$sbs_version" ]; then
        echo "Версия скрипта SBS: $sbs_version"
    else
        echo "Версия скрипта SBS не найдена."
    fi

    sb_versplat=$(get_sb_versplat $SB_PATH)
    if [ -n "$sb_versplat" ]; then
        echo "Версия ядра sing-box: $sb_versplat"
    else
        echo "Версия ядра sing-box не найдена."
    fi

    echo "Архитектура CPU роутера: $(uname -m)"
}

install_sing_box() {
    echo "Установить скрипт sing-box?"
    while true; do
        read -p "1-Нет, 2-Да: " choice
        case $choice in
            1) delete_if_not_current_dir; echo "Установка скрипта sing-box отменена."; exit 0 ;;
            2) if is_running; then
                echo "Скрипт sing-box уже установлен ранее и запущен. Продолжить установку?. При выборе варианта 2, sing-box будет предварительно остановлен."
                while true; do
                   read -p "1-Нет, 2-Да: " continue_choice
                   case "$continue_choice" in
                       1) delete_if_not_current_dir; echo "Установка скрипта sing-box отменена."; exit 0 ;;
                       2) stop_sing_box; break ;;
                       *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
                   esac
                done
               else break; fi; break ;;
            *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
        esac
    done

    echo "Начинаем установку скрипта sing-box..."

    create_or_use_existing "$JFFS_SB_DIR"

    handle_existing_file "$SCRIPT_PATH" self_copy

    ln -sf $SCRIPT_PATH $LN_PATH

    handle_existing_file "$JFFS_SB_DIR/sbs-conf" create_sbs_conf

    handle_existing_file "$SBS_MON" create_sbs_monitor

    check_file_existence_and_download "$SB_CONFIG" "$SB_CONFIG_URL"
    chmod 664 "$SB_CONFIG"

    if [ -n "$ROOT_DIR" ]; then
        create_or_use_existing "$SB_DIR"
    else
        echo "Директория $ROOT_DIR не найдена. Видимо в роутере отсутствует USB накопитель с установленным Entware. Операция отменена."
        delete_if_not_current_dir
        exit 1
    fi

    create_dir "$SB_DOWNLOAD_DIR"

    if [ "$(uname -m)" = "aarch64" ]; then
        DOWNLOAD_URL="$SB_DOWNLOAD64_URL"
        ARCHIVE_PATH="$SB_ARCHIVE64_PATH"
    else
        DOWNLOAD_URL="$SB_DOWNLOAD_URL"
        ARCHIVE_PATH="$SB_ARCHIVE_PATH"
    fi
    echo "Скачиваем архив с ядром sing-box..."
    curl -s -L -o "$ARCHIVE_PATH" "$DOWNLOAD_URL"
    echo "Распаковываем архив..."
    tar -xzvf "$ARCHIVE_PATH" -C "$SB_DOWNLOAD_DIR"
    sing_box_file=$(find "$SB_DOWNLOAD_DIR" -name "sing-box" -exec test -f {} \; -print)

    if [ -f "$SB_PATH" ]; then
        echo "Файл ядра sing-box уже существует. Что вы хотите сделать?"
        while true; do
            read -p "1-Оставить существующий файл, 2-Заменить файл: " choice
            case $choice in
                1) echo "Оставляем существующий файл."; break ;;
                2) cp "$sing_box_file" "$SB_DIR"; chmod 775 "$SB_PATH"; echo "Файл $SB_PATH заменён."; break ;;
                *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
            esac
        done
    else
        cp "$sing_box_file" "$SB_DIR"; echo "Файл ядра sing-box перемещён в директорию $SB_DIR"
    fi

    local current_dir=$(dirname "$(readlink -f "$0")")
    if [ "$current_dir" != "$JFFS_SB_DIR" ]; then
      rm -rf "$SB_DOWNLOAD_DIR" "$(readlink -f "$0")"
    else
      rm -rf "$SB_DOWNLOAD_DIR"
    fi

    echo "Директория $SB_DOWNLOAD_DIR удалена."

    echo "

*********************
Установка завершена.
*********************
1. Обязательно перед первым запуском sing-box выполните команду:
sbs setup
В процессе её выполнения, вы можете отредактировать config.json (файл конфигурации sing-box) в редакторе nano, затем ввести ip адреса устройств, трафик которых желаете пустить через sing-box, и сменить номера таблиц маршрутизации (не обязательно).
2. Запустить sing-box можно командой:
sbs start

Подсказки по всем командам можно увидеть, выполнив в консоли роутера команду:
sbs"
}

remove_sing_box() {
    echo "Удалить все директории и файлы скрипта sing-box? Если sing-box запущен, при выборе варианта 2 он предварительно будет остановлен."
    while true; do
        read -p "1-Нет, 2-Да: " choice
        case $choice in
            1) echo "Уффф, пронесло! Чуть не удалили!"; exit 0 ;;
            2) if is_running; then stop_sing_box; fi; echo "Удаление всех директорий и файлов скрипта sing-box."; rm -rf $SB_DIR $JFFS_SB_DIR $LN_PATH; echo "Все директории и файлы скрипта sing-box удалены."; exit 0 ;;
            *) echo "Некорректный ввод. Попробуйте ещё раз." ;;
        esac
    done

}

show_menu() {
    echo "Для запуска скрипта sing-box вы можете выполнить команду sbs с перечисленными ниже параметрами непосредственно в консоли, например sbs start, или можете выполнить запуск из данного меню по номеру параметра."
    echo "Введите номер параметра запуска или выхода из данного меню:"
    echo "1) start (Запуск sing-box)"
    echo "2) stop (Остановка sing-box)"
    echo "3) restart (Перезапуск sing-box)"
    echo "4) setup (Пошаговая настройка скрипта)"
    echo "5) edit (Редактировать файл настроек скрипта)"
    echo "6) check (Проверить конфигурационный файл sing-box на ошибки)"
    echo "7) format (Оптимизировать структуру конфигурационного файла sing-box)"
    echo "8) update (Вызвать меню обновления скриптов sbs и ядра sing-box)"
    echo "9) status (Узнать статус sing-box, версии скрипта и ядра sing-box, архитектуру CPU роутера)"
    echo "10) remove (!!!Удалить sing-box полностью!!!)"
    echo "0) Выход из меню."
}

# Меню
case "$1" in
    install) install_sing_box ;;
    setup) setup_sing_box ;;
    start) start_sing_box ;;
    stop) stop_sing_box ;;
    restart) stop_sing_box; sleep 2; start_sing_box ;;
    edit) edit_sing_box ;;
    check) check_sing_box ;;
    format) format_sing_box ;;
    update) update_menu ;;
    status) status_sing_box ;;
    remove) remove_sing_box ;;
    updmon) update_sbs_monitor ;;
    *)
        while true; do
            show_menu
            read -p "Введите нужный номер [0-10]: " choice
            case $choice in
                1) start_sing_box; break ;;
                2) stop_sing_box; break ;;
                3) stop_sing_box; sleep 1; start_sing_box; break ;;
                4) setup_sing_box; break ;;
                5) edit_sing_box; break ;;
                6) check_sing_box; break ;;
                7) format_sing_box; break ;;
                8) update_menu; break ;;
                9) status_sing_box; break ;;
                10) remove_sing_box; break ;;
                0) exit 0 ;;
                *) echo "Некорректный ввод, попробуйте ещё." ;;
            esac
        done ;;
esac
